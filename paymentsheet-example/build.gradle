plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.5.10'
}

// Read values from gradle.properties or system environment variable
def getBackendUrl() {
    return getValue('STRIPE_PAYMENTSHEET_EXAMPLE_BACKEND_URL')
}

private def getValue(key) {
    // first try to get the value from Gradle properties
    // see https://docs.gradle.org/current/userguide/build_environment.html#sec:gradle_configuration_properties
    final String propValue
    if (hasProperty(key)) {
        propValue = property(key)
    } else {
        propValue = null
    }

    if (propValue?.trim()) {
        return propValue
    } else {
        // Otherwise, get the value from environment variables
        // see https://docs.gradle.org/current/userguide/build_environment.html#sec:gradle_environment_variables
        final String envValue = System.getenv(key)
        return envValue?.trim() ? envValue : ""
    }
}

dependencies {
    implementation project(':payments')

    implementation libraries.androidx.lifecycle.livedata.ktx
    implementation libraries.androidx.lifecycle.viewmodel.ktx
    implementation libraries.androidx.preference.ktx
    implementation libraries.androidx.core.ktx
    implementation libraries.androidx.appcompat
    implementation libraries.androidx.constraintlayout
    implementation libraries.androidx.navigation.fragment.ktx
    implementation libraries.androidx.navigation.ui.ktx
    implementation libraries.androidx.activity.ktx
    implementation 'com.google.android.material:material:1.3.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.2.1"

    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.1'
    implementation "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0"

    implementation "androidx.compose.ui:ui:$composeVersion"
    // Tooling support (Previews, etc.)
    implementation "androidx.compose.ui:ui-tooling:$composeVersion"
    // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
    implementation "androidx.compose.foundation:foundation:$composeVersion"
    // Material Design
    implementation "androidx.compose.material:material:$composeVersion"
    // Material design icons
    implementation "androidx.compose.material:material-icons-core:$composeVersion"
    implementation "androidx.compose.material:material-icons-extended:$composeVersion"
    // Integration with activities
    implementation "androidx.activity:activity-compose:1.3.0-alpha08"
    // Integration with ViewModels
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:1.0.0-alpha05"
    // Integration with observables
    implementation "androidx.compose.runtime:runtime-livedata:$composeVersion"
    implementation "androidx.compose.runtime:runtime-rxjava2:$composeVersion"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    defaultConfig {
        applicationId "com.stripe.android.paymentsheet.example"
        minSdkVersion 21
        targetSdkVersion rootProject.ext.compileSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        manifestPlaceholders = [
                BACKEND_URL: getBackendUrl()
        ]
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        viewBinding true
        compose true
    }
    composeOptions {
        kotlinCompilerVersion = "$kotlinVersion"
        kotlinCompilerExtensionVersion "$composeVersion"
    }
}