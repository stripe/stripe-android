apply from: configs.androidApplication

apply plugin: 'org.jetbrains.kotlin.plugin.serialization'
apply plugin: 'shot'

// Read values from gradle.properties or system environment variable
def getBackendUrl() {
    return findProperty('STRIPE_PAYMENTSHEET_EXAMPLE_BACKEND_URL') ?: ""
}

def getGooglePlacesApiKey() {
    return findProperty('STRIPE_PAYMENTSHEET_EXAMPLE_GOOGLE_PLACES_API_KEY') ?: ""
}

dependencies {
    implementation project(':payments')
    implementation project(':stripecardscan')
    implementation project(':financial-connections')

    implementation libs.androidx.activity
    implementation libs.androidx.appCompat
    implementation libs.androidx.constraintLayout
    implementation libs.androidx.coreKtx
    implementation libs.androidx.liveDataKtx
    implementation libs.androidx.navigationFragment
    implementation libs.androidx.navigationUi
    implementation libs.androidx.preference
    implementation libs.androidx.viewModel
    implementation libs.compose.activity
    implementation libs.compose.foundation
    implementation libs.compose.liveData
    implementation libs.compose.material
    implementation libs.compose.materialIcons
    implementation libs.compose.materialIconsExtended
    implementation libs.compose.ui
    implementation libs.compose.uiTooling
    implementation libs.compose.viewModels
    implementation libs.fuel
    implementation libs.goDaddyColorPicker
    implementation libs.kotlin.serialization
    implementation libs.loggingInterceptor
    implementation libs.material
    implementation libs.okio
    implementation libs.places
    implementation libs.retrofitKotlinSerializationConverter
    implementation libs.zxing

    // Needed for createComposeRule, but not createAndroidComposeRule:
    debugImplementation libs.compose.uiTestManifest
    debugImplementation libs.leakCanary

    androidTestImplementation project(':payments-ui-core')
    androidTestImplementation project(':payments-core-testing')
    androidTestImplementation libs.playServicesWallet
    androidTestImplementation testLibs.androidx.archCore
    androidTestImplementation testLibs.androidx.composeUi
    androidTestImplementation testLibs.androidx.core
    androidTestImplementation testLibs.androidx.coreKtx
    androidTestImplementation testLibs.androidx.junit
    androidTestImplementation testLibs.androidx.testRules
    androidTestImplementation testLibs.androidx.testRunner
    androidTestImplementation testLibs.androidx.truth
    androidTestImplementation testLibs.androidx.uiAutomator
    androidTestImplementation(testLibs.espresso.accessibility) {
        exclude group: 'org.checkerframework', module: 'checker'
    }
    androidTestImplementation(testLibs.espresso.contrib) {
        exclude group: 'org.checkerframework', module: 'checker'
    }
    androidTestImplementation testLibs.espresso.core
    androidTestImplementation testLibs.espresso.intents
    androidTestImplementation testLibs.espresso.web
    androidTestImplementation testLibs.truth
}

shot {
    tolerance = 1 // 1% tolerance because screenshots look slightly different on arm64-v8a vs x86_64 vs m1 emulators
}

android {
    defaultConfig {
        applicationId "com.stripe.android.paymentsheet.example"
        versionCode 11

        testInstrumentationRunner "com.karumi.shot.ShotTestRunner"

        buildConfigField "boolean", "IS_RUNNING_IN_CI", "$gradle.ext.isCi"

        manifestPlaceholders = [
                BACKEND_URL: getBackendUrl(),
                GOOGLE_PLACES_API_KEY: getGooglePlacesApiKey()
        ]
    }
    buildFeatures {
        viewBinding true
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "${versions.androidxComposeCompiler}"
    }
}
