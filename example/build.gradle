apply from: configs.androidApplication

apply plugin: 'org.jetbrains.kotlin.plugin.parcelize'

// Read values from gradle.properties or system environment variable
def getBackendUrl() {
    return findProperty('STRIPE_EXAMPLE_BACKEND_URL') ?: ""
}

def getPublishableKey() {
    return findProperty('STRIPE_EXAMPLE_PUBLISHABLE_KEY') ?: ""
}

def getAccountId() {
    return findProperty('STRIPE_ACCOUNT_ID') ?: ""
}

dependencies {
    implementation project(':payments')
    implementation project(':financial-connections')

    implementation libs.accompanist.materialThemeAdapter
    implementation libs.alipay
    implementation libs.androidx.appCompat
    implementation libs.androidx.constraintLayout
    implementation libs.androidx.fragment
    implementation libs.androidx.liveDataKtx
    implementation libs.androidx.preference
    implementation libs.androidx.recyclerView
    implementation libs.androidx.viewModel
    implementation libs.compose.activity
    implementation libs.compose.liveData
    implementation libs.compose.material
    implementation libs.gson
    implementation libs.kotlin.coroutines
    implementation libs.kotlin.coroutinesAndroid
    implementation libs.loggingInterceptor
    implementation libs.material
    implementation libs.playServicesWallet
    implementation libs.okio
    implementation libs.retrofit
    implementation libs.retrofitGsonConverter

    debugImplementation libs.leakCanary

    testImplementation testLibs.androidx.core

    androidTestImplementation testLibs.androidx.core
    androidTestImplementation testLibs.androidx.coreKtx
    androidTestImplementation testLibs.androidx.junit
    androidTestImplementation testLibs.androidx.junitKtx
    androidTestImplementation testLibs.androidx.testRunner
    androidTestImplementation testLibs.androidx.testRules
    androidTestImplementation testLibs.androidx.truth
    androidTestImplementation testLibs.espresso.core
    androidTestImplementation(testLibs.espresso.contrib) {
        exclude group: 'org.checkerframework', module: 'checker'
    }
    androidTestImplementation testLibs.espresso.intents
    androidTestImplementation testLibs.truth

    androidTestUtil testLibs.testOrchestrator
}

android {
    defaultConfig {
        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // From https://developer.android.com/training/testing/junit-runner:
        // > To remove all shared state from your device's CPU and memory after each test,
        // > use the clearPackageData flag.
        testInstrumentationRunnerArguments clearPackageData: 'true'

        manifestPlaceholders = [
                BACKEND_URL: getBackendUrl(),
                PUBLISHABLE_KEY: getPublishableKey(),
                STRIPE_ACCOUNT_ID: getAccountId()
        ]
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }

    lint {
        disable 'MissingTranslation'
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
        androidTest {
            setRoot('src/test')
        }
    }

    buildFeatures {
        viewBinding true
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "${versions.androidxComposeCompiler}"
    }
}
