import java.time.Duration

// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    apply from: 'dependencies.gradle'
    apply from: './build-configuration/build-environment.gradle'

    repositories {
        mavenCentral()
        google()
        gradlePluginPortal()
    }

    dependencies {
        classpath buildLibs.androidGradlePlugin
        classpath buildLibs.binaryCompatibilityValidator
        classpath buildLibs.detektGradlePlugin
        classpath buildLibs.dokkaPlugin
        classpath buildLibs.firebaseAppDistribution
        classpath buildLibs.googleServices
        classpath buildLibs.kotlinGradlePlugin
        classpath buildLibs.kotlinSerializationPlugin
        classpath buildLibs.paparazzi
        classpath buildLibs.shot
    }
}

plugins {
    id 'io.github.gradle-nexus.publish-plugin' version '1.3.0'
    id 'io.codearte.nexus-staging' version '0.30.0'
    id 'com.google.devtools.ksp' version '1.9.22-1.0.17' apply false
    id 'dev.drewhamilton.poko' version '0.15.2' apply false
}

apply plugin: "io.gitlab.arturbosch.detekt"

allprojects {
    group = GROUP

    repositories {
        mavenCentral()
        google()
        gradlePluginPortal()
    }
}

ext {
    compileSdkVersion = 34

    group_name = GROUP
    version_name = VERSION_NAME
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

nexusPublishing {
    packageGroup = GROUP

    repositories {
        sonatype {
            username = project.findProperty('NEXUS_USERNAME') ?: ""
            password = project.findProperty('NEXUS_PASSWORD') ?: ""
        }
    }

    clientTimeout = Duration.ofMinutes(5)
    connectTimeout = Duration.ofMinutes(1)

    transitionCheckOptions {
        maxRetries.set(40)
        delayBetween.set(Duration.ofSeconds(10))
    }
}

apply plugin: 'binary-compatibility-validator'
apply plugin: 'org.jetbrains.dokka'


tasks.dokkaHtmlMultiModule.configure {
    outputDirectory = new File("${project.rootDir}/docs")
}

apiValidation {
    ignoredPackages += ["com.stripe.android.databinding"]
    ignoredProjects += [
            "example",
            "financial-connections-example",
            "identity-example",
            "network-testing",
            "payments-core-testing",
            "paymentsheet-example",
            "stripecardscan-example",
            "screenshot-testing",
    ]
    nonPublicMarkers.add("androidx.annotation.RestrictTo")
    nonPublicMarkers.add("dagger.internal.DaggerGenerated")
}

subprojects {
    plugins.withId("app.cash.paparazzi") {
        // Defer until afterEvaluate so that testImplementation is created by Android plugin.
        afterEvaluate {
            dependencies.constraints {
                add("testImplementation", "com.google.guava:guava") {
                    attributes {
                        attribute(
                                TargetJvmEnvironment.TARGET_JVM_ENVIRONMENT_ATTRIBUTE,
                                objects.named(TargetJvmEnvironment, TargetJvmEnvironment.STANDARD_JVM)
                        )
                    }
                    because("LayoutLib and sdk-common depend on Guava's -jre published variant." +
                            "See https://github.com/cashapp/paparazzi/issues/906.")
                }
            }
        }
    }
}
