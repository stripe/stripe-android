apply from: configs.androidApplication

apply plugin: 'org.jetbrains.kotlin.plugin.serialization'

assemble.dependsOn('lint')

configurations {
    ktlint
}

android {
    defaultConfig {
        applicationId "com.stripe.android.identity.example"
        versionCode 8

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        viewBinding true
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion "$androidxComposeCompilerVersion"
    }

    flavorDimensions += "theme"
    productFlavors {
        create("theme1") {
            manifestPlaceholders["appTheme"] = "@style/Theme.Theme1"
            manifestPlaceholders["appIcon"] = "@drawable/merchant_logo_purple"
            manifestPlaceholders["appIconRound"] = "@drawable/merchant_logo_purple"

            dimension = "theme"
            applicationIdSuffix = ".theme1"
            versionNameSuffix = "-theme1"
        }
        create("theme2") {
            manifestPlaceholders["appTheme"] = "@style/Theme.Theme2"
            manifestPlaceholders["appIcon"] = "@drawable/merchant_logo_red"
            manifestPlaceholders["appIconRound"] = "@drawable/merchant_logo_red"

            dimension = "theme"
            applicationIdSuffix = ".theme2"
            versionNameSuffix = "-theme2"
        }
    }
}

dependencies {
    implementation project(':identity')

    implementation "androidx.core:core-ktx:$androidxCoreVersion"
    implementation "androidx.appcompat:appcompat:$androidxAppcompatVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation 'com.github.kittinunf.fuel:fuel:2.3.1'
    implementation 'com.github.kittinunf.fuel:fuel-coroutines:2.3.1'
    implementation "androidx.constraintlayout:constraintlayout:$androidxConstraintlayoutVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$kotlinSerializationVersion"
    implementation "androidx.browser:browser:$androidxBrowserVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$androidxLifecycleVersion"

    testImplementation "junit:junit:$junitVersion"

    ktlint "com.pinterest:ktlint:$ktlintVersion"

    // compose
    // Integration with activities
    implementation "androidx.activity:activity-compose:$androidxActivityVersion"
    // Integration with ViewModels
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$androidxLifecycleVersion"
    implementation("androidx.compose.ui:ui:$androidxComposeUiVersion")
    // Material Design
    implementation("androidx.compose.material:material:$androidxComposeVersion")
    // Integration with observables
    implementation("androidx.compose.runtime:runtime-livedata:$androidxComposeRuntimeVersion")
    // MdcTheme
    implementation "com.google.accompanist:accompanist-themeadapter-material:$accompanistVersion"

    // TODO(ccen) re-enable and investigate leak in Camera
    // debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    mainClass = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/pinterest/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    mainClass = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}
