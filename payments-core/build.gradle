plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'checkstyle'
    id 'org.jetbrains.dokka'
    id 'org.jetbrains.kotlin.plugin.parcelize'
}

assemble.dependsOn('lint')
check.dependsOn('checkstyle')

configurations {
    javadocDeps
    ktlint
}

dependencies {
    implementation project(":paymentsheet")
    implementation libraries.androidx.annotation
    implementation libraries.androidx.appcompat
    implementation libraries.androidx.browser
    implementation libraries.androidx.recyclerview
    implementation libraries.androidx.lifecycle.livedata.ktx
    implementation libraries.androidx.lifecycle.viewmodel.ktx
    implementation libraries.androidx.lifecycle.viewmodel.savedstate
    implementation libraries.androidx.fragment.ktx
    implementation libraries.androidx.constraintlayout
    implementation libraries.androidx.activity.ktx
    implementation 'com.google.android.gms:play-services-wallet:18.1.3'
    implementation "com.google.android.material:material:$materialVersion"
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    // For instructions on replacing the BouncyCastle dependency used by the 3DS2 SDK, see
    // https://github.com/stripe/stripe-android/issues/3173#issuecomment-785176608
    implementation "com.stripe:stripe-3ds2-android:6.1.1"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutinesVersion"

    implementation "androidx.activity:activity-compose:1.3.1"

    javadocDeps libraries.androidx.annotation
    javadocDeps libraries.androidx.appcompat
    javadocDeps "com.google.android.material:material:$materialVersion"

    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-core:$mockitoCoreVersion"
    testImplementation 'org.robolectric:robolectric:4.6.1'
    testImplementation "androidx.test:core:$androidTestVersion"
    testImplementation 'org.json:json:20210307'
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockitoKotlinVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test-annotations-common:$kotlinVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinCoroutinesVersion"
    testImplementation 'com.google.truth:truth:1.1.3'
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation libraries.androidx.fragment.testing

    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test:rules:$androidTestVersion"
    androidTestImplementation "androidx.test:runner:$androidTestVersion"
    androidTestUtil "androidx.test:orchestrator:$androidTestVersion"

    ktlint "com.pinterest:ktlint:$ktlintVersion"

}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion rootProject.ext.compileSdkVersion
        consumerProguardFiles 'proguard-rules.txt'

        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // From https://developer.android.com/training/testing/junit-runner:
        // > To remove all shared state from your device's CPU and memory after each test,
        // > use the clearPackageData flag.
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
        main.kotlin.srcDirs += 'src/main/java'
        main.java.srcDirs += 'src/main/java'

        test {

        }
    }
    testOptions {
        unitTests {
            // Note: without this, all Robolectric tests using BuildConfig will fail.
            includeAndroidResources = true
            all {
                maxHeapSize = "1024m"
            }
        }
    }
    productFlavors {
    }

    lintOptions {
        enable "Interoperability"
        disable "CoroutineCreationDuringComposition"
        lintConfig file("../settings/lint.xml")
    }

    dokkaHtml {
        outputDirectory = new File("${project.rootDir}/docs/$project.name")
    }

    buildFeatures {
        compose = true
        viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

    composeOptions {
        kotlinCompilerVersion = "$kotlinVersion"
        kotlinCompilerExtensionVersion "$composeVersion"
    }
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/pinterest/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}


ext {
    artifactId = "payments-core"
    artifactName = "payments-core"
    artifactDescrption = "The core module of Stripe Payment Android SDK"
}

apply from: "${rootDir}/deploy/deploy.gradle"
