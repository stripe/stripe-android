plugins {
    id "com.android.library"
    id "kotlin-android"
    id 'kotlin-kapt'
    id 'org.jetbrains.dokka'
    id "org.jetbrains.kotlin.plugin.parcelize"
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.5.0'
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion rootProject.ext.compileSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true

        // From https://developer.android.com/training/testing/junit-runner:
        // > To remove all shared state from your device"s CPU and memory after each test,
        // > use the clearPackageData flag.
        testInstrumentationRunnerArguments clearPackageData: "true"
    }

    sourceSets {
        main {
            res.srcDirs = ['res']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures {
        compose = true
        viewBinding true
    }

    testOptions {
        unitTests {
            // Note: without this, all Robolectric tests using assets will fail.
            includeAndroidResources = true
            all {
                maxHeapSize = "1024m"
            }
        }
    }

    composeOptions {
        kotlinCompilerVersion = "$kotlinVersion"
        kotlinCompilerExtensionVersion "$composeVersion"
    }

    lintOptions {
        disable "UnrememberedMutableState"
    }

    dokkaHtml {
        outputDirectory = new File("${project.rootDir}/docs/$project.name")
    }
}

assemble.dependsOn('lint')
check.dependsOn('checkstyle')

configurations {
    ktlint
}

dependencies {
    implementation libraries.androidx.fragment.ktx
    implementation libraries.androidx.lifecycle.livedata.ktx
    implementation libraries.androidx.lifecycle.viewmodel.ktx
    implementation libraries.androidx.lifecycle.viewmodel.savedstate

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.2.2"

    implementation "androidx.compose.ui:ui:$composeVersion"
    // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
    implementation "androidx.compose.foundation:foundation:$composeVersion"
    // Material Design
    implementation "androidx.compose.material:material:$composeVersion"
    // Material design icons
    implementation "androidx.compose.material:material-icons-core:$composeVersion"
    implementation "androidx.compose.material:material-icons-extended:$composeVersion"
    // Integration with activities
    implementation "androidx.activity:activity-compose:1.3.1"
    // Integration with ViewModels
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:1.0.0-alpha07"
    // Integration with observables
    implementation "androidx.compose.runtime:runtime-livedata:$composeVersion"
    // Tooling support (Previews, etc.)
    debugImplementation "androidx.compose.ui:ui-tooling:$composeVersion"

    // dagger
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    // resource deserialization
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.2.2'

    testImplementation 'junit:junit:4.13.2'
    testImplementation "org.mockito:mockito-core:3.11.2"
    testImplementation 'org.robolectric:robolectric:4.6.1'
    testImplementation "androidx.test:core:$androidTestVersion"
    testImplementation 'org.json:json:20210307'
    testImplementation "org.mockito.kotlin:mockito-kotlin:3.2.0"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test-annotations-common:$kotlinVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinCoroutinesVersion"
    testImplementation 'com.google.truth:truth:1.1.3'
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation libraries.androidx.fragment.testing

    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test:rules:$androidTestVersion"
    androidTestImplementation "androidx.test:runner:$androidTestVersion"
    androidTestUtil "androidx.test:orchestrator:$androidTestVersion"

    ktlint "com.pinterest:ktlint:$ktlintVersion"
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/pinterest/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}

ext {
    artifactId = "paymentsheet"
    artifactName = "paymentsheet"
    artifactDescrption = "The paymentsheet module of Stripe Payment Android SDK"
}

apply from: "${rootDir}/deploy/deploy.gradle"
