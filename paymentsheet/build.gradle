apply from: configs.androidLibrary

apply plugin: 'kotlin-kapt'
apply plugin: "org.jetbrains.kotlin.plugin.parcelize"
apply plugin: 'org.jetbrains.kotlin.plugin.serialization'
apply plugin: 'shot'
apply plugin: 'app.cash.paparazzi'

dependencies {
    implementation project(":link")
    implementation project(":payments-core")
    implementation project(':payments-ui-core')
    implementation project(':stripe-ui-core')
    compileOnly project(':financial-connections')

    implementation "androidx.annotation:annotation:$androidxAnnotationVersion"
    implementation "androidx.appcompat:appcompat:$androidxAppcompatVersion"
    implementation "androidx.browser:browser:$androidxBrowserVersion"
    implementation "androidx.recyclerview:recyclerview:$androidxRecyclerviewVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$androidxLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$androidxLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$androidxLifecycleVersion"
    implementation "androidx.fragment:fragment-ktx:$androidxFragmentVersion"
    implementation "androidx.constraintlayout:constraintlayout:$androidxConstraintlayoutVersion"
    implementation "androidx.activity:activity-ktx:$androidxActivityVersion"
    implementation "com.google.android.gms:play-services-wallet:$playServicesWalletVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    implementation "androidx.compose.ui:ui:$androidxComposeUiVersion"
    implementation "androidx.compose.ui:ui-viewbinding:$androidxComposeUiVersion"
    // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
    implementation "androidx.compose.foundation:foundation:$androidxComposeVersion"
    // Material Design
    implementation "androidx.compose.material:material:$androidxComposeVersion"
    // Material design icons
    implementation "androidx.compose.material:material-icons-core:$androidxComposeVersion"
    // Integration with activities
    implementation "androidx.activity:activity-compose:$androidxActivityVersion"
    implementation "androidx.navigation:navigation-compose:$androidxNavigationVersion"
    implementation"com.google.accompanist:accompanist-navigation-animation:$accompanistVersion"
    // Integration with constraint layouts
    implementation "androidx.constraintlayout:constraintlayout-compose:$androidxConstraintlayoutComposeVersion"
    // Integration with observables
    implementation "androidx.compose.runtime:runtime-livedata:$androidxComposeRuntimeVersion"
    implementation "com.google.accompanist:accompanist-flowlayout:$accompanistVersion"
    // Tooling support (Previews, etc.)
    implementation "androidx.compose.ui:ui-tooling-preview:$androidxComposeUiVersion"
    debugImplementation "androidx.compose.ui:ui-tooling:$androidxComposeUiVersion"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$kotlinSerializationVersion"

    testImplementation "org.hamcrest:hamcrest:2.2"
    testImplementation project(':link')
    testImplementation project(':financial-connections')
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-core:$mockitoCoreVersion"
    testImplementation "org.mockito:mockito-inline:$mockitoCoreVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "androidx.test:core:$androidTestVersion"
    testImplementation "org.json:json:$jsonVersion"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockitoKotlinVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test-annotations-common:$kotlinVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinCoroutinesVersion"
    testImplementation "com.google.truth:truth:$truthVersion"
    testImplementation "androidx.test.ext:junit-ktx:$androidTestJunitVersion"
    testImplementation "androidx.arch.core:core-testing:$androidxArchCoreVersion"
    testImplementation "androidx.fragment:fragment-testing:$androidxFragmentVersion"
    testImplementation "androidx.compose.ui:ui-test-junit4:$androidxComposeUiVersion"
    testImplementation testLibs.turbine

    // temporary fix for running compose test in RobolectricTestRunner, see https://github.com/robolectric/robolectric/issues/6593
    testImplementation "androidx.test.espresso:espresso-core:$espressoVersion"

    androidTestImplementation "com.google.android.libraries.places:places:$placesVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidTestJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation ("androidx.test.espresso:espresso-contrib:$espressoVersion") {
        exclude group: 'org.checkerframework', module: 'checker'
    }
    androidTestImplementation "androidx.test:rules:$androidTestVersion"
    androidTestImplementation "androidx.test:runner:$androidTestRunnerVersion"
    androidTestImplementation "androidx.test.ext:junit-ktx:$androidTestJunitVersion"
    androidTestImplementation "androidx.test:core-ktx:$androidTestVersion"
    // Test rules and transitive dependencies:
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$androidxComposeUiVersion"
    androidTestUtil "androidx.test:orchestrator:$androidTestOrchestratorVersion"
    androidTestImplementation "androidx.test.ext:truth:$androidTestVersion"
    androidTestImplementation "com.google.truth:truth:$truthVersion"
    androidTestImplementation "androidx.test.uiautomator:uiautomator:$uiautomator"

    androidTestImplementation project(':network-testing')

    // Tooling support (Previews, etc.)
    debugImplementation "androidx.compose.ui:ui-tooling:$androidxComposeUiVersion"
    // Needed for createComposeRule, but not createAndroidComposeRule:
    debugImplementation "androidx.compose.ui:ui-test-manifest:$androidxComposeUiVersion"

    // Test rules and transitive dependencies:
    androidTestImplementation("androidx.compose.ui:ui-test-junit4:$androidxComposeUiVersion")

    ktlint "com.pinterest:ktlint:$ktlintVersion"
}

shot {
    applicationId = "com.stripe.android.paymentsheet.test"
    tolerance = 1 // 1% tolerance because screenshots look slightly different on arm64-v8a vs x86_64 vs m1 emulators
}

android {
    defaultConfig {
        testInstrumentationRunner "com.karumi.shot.ShotTestRunner"
        testApplicationId "com.stripe.android.paymentsheet.test"
    }

    buildFeatures {
        compose = true
        viewBinding true
    }

    testOptions {
        unitTests {
            // Note: without this, all Robolectric tests using assets will fail.
            includeAndroidResources = true
            all {
                maxHeapSize = "1024m"
            }
        }

        kotlinOptions {
            freeCompilerArgs += ["-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"]
        }
    }

    composeOptions {
        kotlinCompilerExtensionVersion "$androidxComposeCompilerVersion"
    }

    lintOptions {
        disable "UnrememberedMutableState"
    }

    kotlinOptions {
        freeCompilerArgs += ["-opt-in=kotlinx.coroutines.FlowPreview"]
    }
}

ext {
    artifactId = "paymentsheet"
    artifactName = "paymentsheet"
    artifactDescrption = "The paymentsheet module of Stripe Payment Android SDK"
}

apply from: "${rootDir}/deploy/deploy.gradle"
