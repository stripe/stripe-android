<?xml version='1.0' encoding='UTF-8'?>
<SmellBaseline>
  <ManuallySuppressedIssues/>
  <CurrentIssues>
    <ID>ComplexCondition:OTPElementUI.kt$index != 0 &amp;&amp; event.type == KeyEventType.KeyDown &amp;&amp; event.nativeKeyEvent.keyCode == KeyEvent.KEYCODE_DEL &amp;&amp; value.isEmpty()</ID>
    <ID>ConstructorParameterNaming:AddressElement.kt$AddressElement$_identifier: IdentifierSpec</ID>
    <ID>ConstructorParameterNaming:RowElement.kt$RowElement$_identifier: IdentifierSpec</ID>
    <ID>CyclomaticComplexMethod:Html.kt$@Composable @RestrictTo(RestrictTo.Scope.LIBRARY_GROUP) fun annotatedStringResource( text: String, imageGetter: Map&lt;String, EmbeddableImage> = emptyMap(), urlSpanStyle: SpanStyle = SpanStyle(textDecoration = TextDecoration.Underline) ): AnnotatedString</ID>
    <ID>CyclomaticComplexMethod:IdentifierSpec.kt$IdentifierSpec.Companion$@RestrictTo(RestrictTo.Scope.LIBRARY_GROUP_PREFIX) fun get(value: String)</ID>
    <ID>CyclomaticComplexMethod:StripeTheme.kt$@Composable @ReadOnlyComposable @RestrictTo(RestrictTo.Scope.LIBRARY_GROUP) fun StripeTypography.toComposeTypography(): Typography</ID>
    <ID>CyclomaticComplexMethod:TextFieldUI.kt$@OptIn(ExperimentalComposeUiApi::class) @Composable fun TextField( textFieldController: TextFieldController, enabled: Boolean, imeAction: ImeAction, modifier: Modifier = Modifier, onTextStateChanged: (TextFieldState?) -> Unit = {}, nextFocusDirection: FocusDirection = FocusDirection.Next, previousFocusDirection: FocusDirection = FocusDirection.Previous )</ID>
    <ID>EmptyFunctionBlock:DrawablePainter.kt$EmptyPainter${}</ID>
    <ID>FunctionParameterNaming:IdentifierSpec.kt$IdentifierSpec.Companion$_value: String</ID>
    <ID>LongMethod:DropdownFieldUI.kt$@Composable @RestrictTo(RestrictTo.Scope.LIBRARY_GROUP) fun DropDown( controller: DropdownFieldController, enabled: Boolean, modifier: Modifier = Modifier )</ID>
    <ID>LongMethod:Html.kt$@Composable @RestrictTo(RestrictTo.Scope.LIBRARY_GROUP) fun annotatedStringResource( text: String, imageGetter: Map&lt;String, EmbeddableImage> = emptyMap(), urlSpanStyle: SpanStyle = SpanStyle(textDecoration = TextDecoration.Underline) ): AnnotatedString</ID>
    <ID>LongMethod:OTPElementUI.kt$@Composable @OptIn(ExperimentalMaterialApi::class) private fun OTPInputBox( value: String, isSelected: Boolean, element: OTPElement, index: Int, focusManager: FocusManager, modifier: Modifier, enabled: Boolean, colors: OTPElementColors )</ID>
    <ID>LongMethod:TextFieldUI.kt$@OptIn(ExperimentalComposeUiApi::class) @Composable fun TextField( textFieldController: TextFieldController, enabled: Boolean, imeAction: ImeAction, modifier: Modifier = Modifier, onTextStateChanged: (TextFieldState?) -> Unit = {}, nextFocusDirection: FocusDirection = FocusDirection.Next, previousFocusDirection: FocusDirection = FocusDirection.Previous )</ID>
    <ID>MagicNumber:DateConfig.kt$DateConfig$4</ID>
    <ID>MagicNumber:DateConfig.kt$DateConfig.Companion$100</ID>
    <ID>MagicNumber:DateConfig.kt$DateConfig.Companion$12</ID>
    <ID>MagicNumber:DateConfig.kt$DateConfig.Companion$50</ID>
    <ID>MagicNumber:DrawablePainter.kt$DrawablePainter$255</ID>
    <ID>MagicNumber:DropdownFieldUI.kt$.8f</ID>
    <ID>MagicNumber:DropdownFieldUI.kt$.9f</ID>
    <ID>MagicNumber:DropdownFieldUI.kt$8.9f</ID>
    <ID>MagicNumber:ExpiryDateVisualTransformation.kt$ExpiryDateVisualTransformation$12</ID>
    <ID>MagicNumber:Html.kt$0.1f</ID>
    <ID>MagicNumber:PostalCodeVisualTransformation.kt$PostalCodeVisualTransformation.&lt;no name provided>$3</ID>
    <ID>MagicNumber:PostalCodeVisualTransformation.kt$PostalCodeVisualTransformation.&lt;no name provided>$5</ID>
    <ID>MagicNumber:PostalCodeVisualTransformation.kt$PostalCodeVisualTransformation.&lt;no name provided>$6</ID>
    <ID>MagicNumber:PostalCodeVisualTransformation.kt$PostalCodeVisualTransformation.&lt;no name provided>$7</ID>
    <ID>MagicNumber:StripeTheme.kt$0.15</ID>
    <ID>MagicNumber:StripeTheme.kt$0.32</ID>
    <ID>MagicNumber:StripeTheme.kt$3</ID>
    <ID>MagicNumber:TextFieldUI.kt$1000</ID>
    <ID>MaxLineLength:DrawablePainter.kt$*</ID>
    <ID>MaxLineLength:Html.kt$*</ID>
    <ID>MaxLineLength:UiUtils.kt$*</ID>
    <ID>ReturnCount:OTPController.kt$OTPController$fun onValueChanged(index: Int, text: String): Int</ID>
    <ID>ReturnCount:PostalCodeVisualTransformation.kt$PostalCodeVisualTransformation.&lt;no name provided>$override fun originalToTransformed(offset: Int): Int</ID>
    <ID>ReturnCount:PostalCodeVisualTransformation.kt$PostalCodeVisualTransformation.&lt;no name provided>$override fun transformedToOriginal(offset: Int): Int</ID>
    <ID>ReturnCount:UiUtils.kt$@RestrictTo(RestrictTo.Scope.LIBRARY_GROUP) fun Context.getDrawableFromUri(uri: Uri): Drawable?</ID>
    <ID>SpreadOperator:PhoneNumberElementUI.kt$( it.errorMessage, *args )</ID>
    <ID>SpreadOperator:SectionElementUI.kt$( it.errorMessage, *args )</ID>
    <ID>SpreadOperator:TextFieldUI.kt$( it.errorMessage, *args )</ID>
    <ID>ThrowingExceptionsWithoutMessageOrCause:TransformAddressToElement.kt$IllegalArgumentException()</ID>
    <ID>ThrowsCount:UiUtils.kt$@SuppressLint("DiscouragedApi") internal fun Context.getResourceId(uri: Uri): Pair&lt;Resources, Int></ID>
    <ID>TooManyFunctions:StripeTheme.kt$com.stripe.android.uicore.StripeTheme.kt</ID>
  </CurrentIssues>
</SmellBaseline>
