apply from: configs.androidLibrary

apply plugin: 'kotlin-kapt'
apply plugin: "org.jetbrains.kotlin.plugin.parcelize"
apply plugin: 'org.jetbrains.kotlin.plugin.serialization'

dependencies {
    implementation project(":stripe-core")
    implementation project(":payments-core")
    implementation project(":stripe-ui-core")
    compileOnly project(":stripecardscan")
    compileOnly "com.google.android.libraries.places:places:$placesVersion"

    implementation 'androidx.constraintlayout:constraintlayout-compose:1.0.1'
    implementation "androidx.core:core-ktx:$androidxCoreVersion"
    implementation "androidx.appcompat:appcompat:$androidxAppcompatVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$androidxLifecycleVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    implementation "androidx.compose.ui:ui:$androidxComposeVersion"
    // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
    implementation "androidx.compose.foundation:foundation:$androidxComposeVersion"
    // Material Design
    implementation "androidx.compose.material:material:$androidxComposeVersion"
    // Material design icons
    implementation "androidx.compose.material:material-icons-core:$androidxComposeVersion"
    // Integration with activities
    implementation "androidx.activity:activity-compose:$androidxActivityVersion"
    // Integration with observables
    implementation "androidx.compose.runtime:runtime-livedata:$androidxComposeVersion"
    implementation "com.google.accompanist:accompanist-flowlayout:$accompanistVersion"
    implementation "androidx.compose.ui:ui-tooling-preview:$androidxComposeVersion"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$kotlinSerializationVersion"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$playServicesVersion"

    // Tooling support (Previews, etc.)
    debugImplementation "androidx.compose.ui:ui-tooling:$androidxComposeVersion"

    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-core:$mockitoCoreVersion"
    testImplementation "org.mockito:mockito-inline:$mockitoCoreVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "androidx.test:core:$androidTestVersion"
    testImplementation "org.json:json:$jsonVersion"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockitoKotlinVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test-annotations-common:$kotlinVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinCoroutinesVersion"
    testImplementation "com.google.truth:truth:$truthVersion"
    testImplementation "androidx.test.ext:junit-ktx:$androidTestJunitVersion"
    testImplementation "androidx.arch.core:core-testing:$androidxArchCoreVersion"
    testImplementation "androidx.fragment:fragment-testing:$androidxFragmentVersion"
    testImplementation "com.google.android.libraries.places:places:$placesVersion"
    testImplementation project(':stripecardscan')

    ktlint "com.pinterest:ktlint:$ktlintVersion"
}

android {
    buildFeatures {
        compose = true
        viewBinding = true
    }

    testOptions {
        unitTests {
            // Note: without this, all Robolectric tests using assets will fail.
            includeAndroidResources = true
            all {
                maxHeapSize = "1024m"
            }
        }
    }

    composeOptions {
        kotlinCompilerExtensionVersion "$androidxComposeCompilerVersion"
    }

    lintOptions {
        disable "UnrememberedMutableState"
    }

    kotlinOptions {
        freeCompilerArgs += ["-opt-in=kotlinx.coroutines.FlowPreview", "-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"]
    }
}

ext {
    artifactId = "payments-ui-core"
    artifactName = "payments-ui-core"
    artifactDescrption = "The core UI module of Stripe Android Payments SDKs"
}

apply from: "${rootDir}/deploy/deploy.gradle"
