name: CI
on:
  push:
    branches:
      - master
  pull_request:

env:
  STRIPE_END_TO_END_TESTS_BACKEND_URL: ${{ secrets.STRIPE_END_TO_END_TESTS_BACKEND_URL }}
  STRIPE_END_TO_END_TESTS_PUBLISHABLE_KEY: ${{ secrets.STRIPE_END_TO_END_TESTS_PUBLISHABLE_KEY }}

jobs:
  instrumentation-tests:
    name: Instrumentation tests
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2.22.0
        with:
          api-level: 29
          arch: x86
          disable-animations: true
          script: |
            adb logcat -c
            adb logcat &
            ./gradlew connectedAndroidTest -x :paymentsheet-example:connectedAndroidTest
        env:
          STRIPE_EXAMPLE_BACKEND_URL: ${{ secrets.STRIPE_EXAMPLE_BACKEND_URL }}
          STRIPE_EXAMPLE_PUBLISHABLE_KEY: ${{ secrets.STRIPE_EXAMPLE_PUBLISHABLE_KEY }}

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: instrumentation-test-report
          path: example/build/reports/androidTests/connected/index.html | paymentsheet-example/build/reports/androidTests/connected/index.html

  # This should be updated to use the browserstack github actions when supported
  browserstack-instrumentation-tests:
    name: Browserstack Instrumentation tests
    runs-on: ubuntu-latest
    timeout-minutes: 55
    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 'Build'
        run: ./gradlew :paymentsheet-example:assembleDebugAndroidTest :paymentsheet-example:assembleDebug

      - name: 'Install pip modules'
        run: pip install requests_toolbelt requests

      - name: 'Run BrowserStack tests'
        env:
          BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
          BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
        run: python scripts/browserstack.py --test --apk paymentsheet-example/build/outputs/apk/debug/paymentsheet-example-debug.apk --espresso paymentsheet-example/build/outputs/apk/androidTest/debug/paymentsheet-example-debug-androidTest.apk


  check:
    name: Check
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Ktlint
        run: bash scripts/execute_task_for_changed_modules.sh ktlint
      - name: Detekt
        run: ./gradlew detekt
      - name: Checkstyle
        run: ./gradlew checkstyle
      - name: Lint
        run: bash scripts/execute_task_for_changed_modules.sh lintRelease

      # Check if there has been a binary incompatible change to the API.
      # If this change is intentional, run `./gradlew apiDump` and commit the new API files.
      - name: Check binary compatibility
        run: ./gradlew apiCheck

  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    timeout-minutes: 35
    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Unit tests
        run: bash scripts/execute_unittests_for_changed_modules.sh
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: unit-test-report
          path: payments-core/build/reports/tests/testDebugUnitTest/

  end-to-end-tests:
    name: End-to-end tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: End-to-end tests
        run: ./gradlew :stripe-test-e2e:testDebugUnitTest
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: unit-test-report
          path: stripe-test-e2e/build/reports/tests/testDebugUnitTest/

