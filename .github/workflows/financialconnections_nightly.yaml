name: financial-connections-nightly
on:
  # Can be executed manually.
  workflow_dispatch:
  # Execute hourly.
  schedule:
    - cron: '0 * * * *'

jobs:
  maestro:
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [ 28 ]
        arch: [ x86_64 ]
        target: [ playstore ]
        profile: [ Nexus 6 ]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/stripe_setup
      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}-${{ matrix.arch }}-${{ matrix.profile }}-${{ matrix.target }}

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: ${{ matrix.arch }}
          profile: ${{ matrix.profile }}
          target: ${{ matrix.target }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: Install Maestro CLI
        run: curl -Ls "https://get.maestro.mobile.dev" | bash

      - name: Add Maestro to path
        run: echo "${HOME}/.maestro/bin" >> $GITHUB_PATH

      - name: Run Tests (try 1)
        id: run-tests-1
        continue-on-error: true
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: ${{ matrix.arch }}
          profile: ${{ matrix.profile }}
          target: ${{ matrix.target }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: bash scripts/execute_maestro_tests.sh
        env:
          STRIPE_FINANCIAL_CONNECTIONS_EXAMPLE_BACKEND_URL: ${{ secrets.STRIPE_FINANCIAL_CONNECTIONS_EXAMPLE_BACKEND_URL }}

      - name: Run Tests (try 2)
        id: run-tests-2
        continue-on-error: true
        if: steps.run-tests-1.outcome == 'failure'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: ${{ matrix.arch }}
          profile: ${{ matrix.profile }}
          target: ${{ matrix.target }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: bash scripts/execute_maestro_tests.sh
        env:
          STRIPE_FINANCIAL_CONNECTIONS_EXAMPLE_BACKEND_URL: ${{ secrets.STRIPE_FINANCIAL_CONNECTIONS_EXAMPLE_BACKEND_URL }}

      - name: Run Tests (try 3)
        id: run-tests-3
        if: steps.run-tests-2.outcome == 'failure'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: ${{ matrix.arch }}
          profile: ${{ matrix.profile }}
          target: ${{ matrix.target }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: bash scripts/execute_maestro_tests.sh
        env:
          STRIPE_FINANCIAL_CONNECTIONS_EXAMPLE_BACKEND_URL: ${{ secrets.STRIPE_FINANCIAL_CONNECTIONS_EXAMPLE_BACKEND_URL }}

      - name: Publish Test Report
        id: publish_test_report
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          detailed_summary: true
          report_paths: 'report.xml'

      - name: Upload Reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: financial-connections-example/build/reports/

      - name: Send Maestro test results to Slack
        if: failure()
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "status": "${{ job.status }}",
              "tests_total": "${{steps.publish_test_report.outputs.total}}", 
              "tests_passed": "${{steps.publish_test_report.outputs.passed}}", 
              "tests_failed": "${{steps.publish_test_report.outputs.failed}}", 
              "artifacts": "https://github.com/stripe/stripe-android/actions/runs/${{ github.run_id }}#artifacts"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_FINANCIAL_CONNECTIONS_ANDROID_MAESTRO_WEBHOOK_URL }}
