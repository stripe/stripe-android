apply from: configs.androidLibrary

apply plugin: 'kotlin-kapt'
apply plugin: "org.jetbrains.kotlin.plugin.parcelize"
apply plugin: 'org.jetbrains.kotlin.plugin.serialization'

dependencies {
    implementation project(':payments-core')
    implementation project(':stripe-core')
    implementation project(':payments-ui-core')
    implementation project(':financial-connections')
    implementation project(':stripe-ui-core')

    implementation "androidx.appcompat:appcompat:$androidxAppcompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$androidxConstraintlayoutVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$androidxLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$androidxLifecycleVersion"
    implementation "androidx.security:security-crypto:$androidxSecurityVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    implementation "androidx.compose.ui:ui:$androidxComposeUiVersion"
    // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
    implementation "androidx.compose.foundation:foundation:$androidxComposeVersion"
    // Material Design
    implementation "androidx.compose.material:material:$androidxComposeVersion"
    // Material design icons
    implementation "androidx.compose.material:material-icons-core:$androidxComposeVersion"
    // Integration with activities
    implementation "androidx.activity:activity-compose:$androidxActivityVersion"
    implementation "androidx.navigation:navigation-compose:$androidxNavigationVersion"
    // Integration with observables
    implementation "androidx.compose.runtime:runtime-livedata:$androidxComposeRuntimeVersion"
    implementation "com.google.accompanist:accompanist-flowlayout:$accompanistVersion"
    implementation "androidx.compose.ui:ui-tooling-preview:$androidxComposeUiVersion"

    testImplementation project(':payments-core')
    testImplementation project(':payments-ui-core')
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
    testImplementation "com.google.truth:truth:$truthVersion"
    testImplementation "org.mockito:mockito-core:$mockitoCoreVersion"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockitoKotlinVersion"
    testImplementation "org.mockito:mockito-inline:$mockitoCoreVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "androidx.test:core:$androidTestVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinCoroutinesVersion"
    testImplementation testLibs.turbine

    androidTestImplementation "com.google.truth:truth:$truthVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidTestJunitVersion"
    // Test rules and transitive dependencies:
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$androidxComposeUiVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$androidxArchCoreVersion"

    // Tooling support (Previews, etc.)
    debugImplementation "androidx.compose.ui:ui-tooling:$androidxComposeUiVersion"
    // Needed for createComposeRule, but not createAndroidComposeRule:
    debugImplementation "androidx.compose.ui:ui-test-manifest:$androidxComposeUiVersion"

    ktlint "com.pinterest:ktlint:$ktlintVersion"
}

android {
    buildFeatures {
        compose = true
    }

    testOptions {
        unitTests {
            // Note: without this, all Robolectric tests using assets will fail.
            includeAndroidResources = true
            all {
                maxHeapSize = "1024m"
            }
        }
        kotlinOptions {
            freeCompilerArgs += ["-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"]
        }
    }

    composeOptions {
        kotlinCompilerExtensionVersion "$androidxComposeCompilerVersion"
    }
}

ext {
    artifactId = "link"
    artifactName = "link"
    artifactDescrption = "The Link module of Stripe Payment Android SDK"
}

apply from: "${rootDir}/deploy/deploy.gradle"
