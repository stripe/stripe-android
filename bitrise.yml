---
format_version: '11'
default_step_lib_source: 'https://github.com/bitrise-io/bitrise-steplib.git'
project_type: android
trigger_map:
  - push_branch: 'master'
    pipeline: main-trigger-pipeline
  - pull_request_source_branch: '*'
    pipeline: main-trigger-pipeline
app:
  envs:
    - GRADLE_OPTS: -Dkotlin.incremental=false

pipelines:
  main-trigger-pipeline:
    stages:
      - stage-trigger-run-all: {}

stages:
  stage-trigger-run-all:
    workflows:
      - check: {}
      - test: {}

workflows:
  check:
    steps:
      - activate-ssh-key@4:
          run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
      - git-clone@6: {}
      - cache-pull@2: {}
      - script@1:
          inputs:
            - content: mkdir -p ~/.gradle ; cp .bitrise/ci-gradle.properties ~/.gradle/gradle.properties
      - script@1:
          inputs:
          - content: ./gradlew ktlint detekt lintRelease apiCheck
      - cache-push@2: {}
  test:
    steps:
      - activate-ssh-key@4:
          run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
      - git-clone@6: {}
      - cache-pull@2: {}
      - script@1:
          inputs:
            - content: mkdir -p ~/.gradle ; cp .bitrise/ci-gradle.properties ~/.gradle/gradle.properties
      - script@1:
          inputs:
            - content: ./gradlew testDebugUnitTest verifyPaparazziDebug -x :stripe-test-e2e:testDebugUnitTest
      - cache-push@2: {}
  maestro-financial-connections:
    steps:
      - avd-manager@1: {}
      - activate-ssh-key@4:
          run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
      - git-clone@7.0: {}
      - cache-pull@2: {}
      - script@1:
          inputs:
            - content: mkdir -p ~/.gradle ; cp .bitrise/ci-gradle.properties ~/.gradle/gradle.properties
            - content:
      - wait-for-android-emulator@1: {}
      - script@1:
          inputs:
            - content: |-
                #!/usr/bin/env bash
                set -e
                set -o pipefail
                set -x

                # Install Maestro
                curl -Ls "https://get.maestro.mobile.dev" | bash
                export PATH="$PATH":"$HOME/.maestro/bin"
                maestro -v
                
                # Compile and install APK.
                ./gradlew -PSTRIPE_FINANCIAL_CONNECTIONS_EXAMPLE_BACKEND_URL=$STRIPE_FINANCIAL_CONNECTIONS_EXAMPLE_BACKEND_URL :financial-connections-example:installDebug
                
                # Run tests.
                maestro test --format junit --output maestroReport.xml maestro/financial-connections
      - slack@3:
          is_always_run: true
          inputs:
          - webhook_url: $WEBHOOK_SLACK_CARLOSMUVI_MAESTRO
          - webhook_url_on_error: $WEBHOOK_SLACK_CARLOSMUVI_MAESTRO
      - custom-test-results-export@0:
          inputs:
            - search_pattern: '*/maestroReport.xml'
            - test_name: Maestro tests
      - deploy-to-bitrise-io@2: {}
      - cache-push@2: {}
meta:
  bitrise.io:
    stack: linux-docker-android-20.04
    machine_type_id: elite
